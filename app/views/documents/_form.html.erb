<%= form_with(model: document, id: 'editor') do |form| %>
  <% if document.errors.any? %>
    <div id="error_explanation" class="alert alert-danger">
      <h2><%= pluralize(document.errors.count, "error") %> prohibited this document from being saved:</h2>
      <ul>
        <% document.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="mb-4">
    <%= form.label :content, "文書名", class: "form-label fw-bold mb-2" %>
    <%= form.text_field :content, class: "form-control", placeholder: "文書名を入力してください", required: true %>
  </div>

  <div class="mb-4">
    <%= form.label :start_at, "開始時刻", class: "form-label fw-bold mb-2" %>
    <%= form.datetime_field :start_at, class: "form-control", required: true %>
  </div>

  <div class="mb-4">
    <%= form.label :end_at, "終了時刻", class: "form-label fw-bold mb-2" %>
    <%= form.datetime_field :end_at, class: "form-control", required: true %>
  </div>

  <div class="mb-4">
    <%= form.label :location, "場所", class: "form-label fw-bold mb-2" %>
    <%= form.text_field :location, class: "form-control", required: true %>
  </div>

  <div class="mb-4">
    <%= form.label :project_id, "プロジェクト名", class: "form-label fw-bold mb-2" %>
    <%= form.select :project_id, @projects.map { |p| [p.name, p.id] }, { include_blank: true }, class: "form-select", required: false %>
  </div>

  <div class="mb-4">
    <%= form.label :tags, "タグ", class: "form-label fw-bold mb-2", for: "tag-name" %>
    <div id="current_tags" class="mb-2"></div>
    <div class="input-group mb-2">
      <input id="tag-name" list="tags" class="form-control">
      <button type="button" id="add-tag-btn" class="btn btn-outline-secondary">追加</button>
    </div>
    <datalist id="tags">
      <% @tags.each do |t| %>
        <option value="<%= t.name %>">
      <% end %>
    </datalist>
  </div>

  <% content_for :js do %>
    <%= javascript_import_module_tag "tag_completion" %>
  <% end %>

  <script>
    document.addEventListener('turbo:load', function() {
      const tagInput = document.getElementById('tag-name');
      const addTagBtn = document.getElementById('add-tag-btn');
      const addedTagsDiv = document.getElementById('current_tags');
      const form = document.getElementById('editor');
      let tags = <%= raw(document.tags.map(&:name).to_json) %>;
      renderTags();

      function renderTags() {
        addedTagsDiv.innerHTML = '';
        tags.forEach((tag, idx) => {
          const span = document.createElement('span');
          span.className = 'badge bg-secondary me-1';
          span.textContent = tag;
          const removeBtn = document.createElement('button');
          removeBtn.type = 'button';
          removeBtn.className = 'btn-close btn-close-white ms-1';
          removeBtn.style.fontSize = '0.7em';
          removeBtn.onclick = () => {
            tags.splice(idx, 1);
            renderTags();
          };
          span.appendChild(removeBtn);
          addedTagsDiv.appendChild(span);
        });
        document.querySelectorAll('.tag-hidden-input').forEach(e => e.remove());
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'tag_names';
        input.value = tags.join(' ');
        input.className = 'tag-hidden-input';
        form.appendChild(input);
      }

      addTagBtn.onclick = () => {
        const val = tagInput.value.trim();
        if (val && !tags.includes(val)) {
          tags.push(val);
          tagInput.value = '';
          renderTags();
        }
      };
    });
  </script>

  <div class="tabs">
    <input id="write" type="radio" name="tab_item" checked>
    <label class="tab_item" for="write">Write</label>
    <input id="preview" type="radio" name="tab_item">
    <label class="tab_item" for="preview">Preview</label>
    <div class="tab_content" id="write_content">
    <%= form.text_area :description, class: "border-2 w-full", rows: 10, id: "write-area", placeholder: "文書内容を入力してください" %>
    </div>
    <div class="tab_content" id="preview_content">
      <div style="height: 300px" class="overflow-y-scroll">
        <div id="preview-area" class="markdown-body p-12 list-style-none"></div>
      </div>
    </div>
  </div>

  <div class="d-grid">
    <%= form.submit "保存", class: "btn btn-danger" %>
  </div>

  <script>
    document.getElementById('preview').onchange=function(){
    const text = document.getElementById("write-area").value
    const preview = document.getElementById("preview-area")
    const obj = {text: text};
    const method = "POST";
    const body = JSON.stringify(obj);
    const headers = {
      'Accept': 'application/json',
      'Content-Type': 'application/json'
    };
    fetch("/documents/api_markdown", {method, headers, body}).then((res)=> res.json()).then((obj) => {preview.innerHTML=obj.text}).catch(console.error);}
    document.getElementById('document_end_at').onfocus = function() {
      date = document.getElementById('document_start_at').value.split("T")[0];
      time = document.getElementById('document_end_at').value.split("T")[1];
      document.getElementById('document_end_at').value = date + 'T' + time;
    }
  </script>

  <%= javascript_include_tag 'prevent_transition_in_editing' %>
<% end %>
